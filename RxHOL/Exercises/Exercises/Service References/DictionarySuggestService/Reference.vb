'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace DictionarySuggestService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://services.aonaware.com/webservices/", ConfigurationName:="DictionarySuggestService.DictServiceSoap")>  _
    Public Interface DictServiceSoap
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/ServerInfo", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function ServerInfo() As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/ServerInfo", ReplyAction:="*")>  _
        Function BeginServerInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndServerInfo(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/DictionaryList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DictionaryList() As Dictionary()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/DictionaryList", ReplyAction:="*")>  _
        Function BeginDictionaryList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDictionaryList(ByVal result As System.IAsyncResult) As Dictionary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/DictionaryListExtended", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DictionaryListExtended() As Dictionary()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/DictionaryListExtended", ReplyAction:="*")>  _
        Function BeginDictionaryListExtended(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDictionaryListExtended(ByVal result As System.IAsyncResult) As Dictionary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/DictionaryInfo", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DictionaryInfo(ByVal dictId As String) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/DictionaryInfo", ReplyAction:="*")>  _
        Function BeginDictionaryInfo(ByVal dictId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDictionaryInfo(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/Define", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Define(ByVal word As String) As DictionarySuggestService.WordDefinition
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/Define", ReplyAction:="*")>  _
        Function BeginDefine(ByVal word As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDefine(ByVal result As System.IAsyncResult) As DictionarySuggestService.WordDefinition
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/DefineInDict", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function DefineInDict(ByVal dictId As String, ByVal word As String) As DictionarySuggestService.WordDefinition
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/DefineInDict", ReplyAction:="*")>  _
        Function BeginDefineInDict(ByVal dictId As String, ByVal word As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDefineInDict(ByVal result As System.IAsyncResult) As DictionarySuggestService.WordDefinition
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/StrategyList", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function StrategyList() As Strategy()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/StrategyList", ReplyAction:="*")>  _
        Function BeginStrategyList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndStrategyList(ByVal result As System.IAsyncResult) As Strategy()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/Match", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function Match(ByVal word As String, ByVal strategy As String) As DictionaryWord()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/Match", ReplyAction:="*")>  _
        Function BeginMatch(ByVal word As String, ByVal strategy As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndMatch(ByVal result As System.IAsyncResult) As DictionaryWord()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://services.aonaware.com/webservices/MatchInDict", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults:=true)>  _
        Function MatchInDict(ByVal dictId As String, ByVal word As String, ByVal strategy As String) As DictionaryWord()
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://services.aonaware.com/webservices/MatchInDict", ReplyAction:="*")>  _
        Function BeginMatchInDict(ByVal dictId As String, ByVal word As String, ByVal strategy As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndMatchInDict(ByVal result As System.IAsyncResult) As DictionaryWord()
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://services.aonaware.com/webservices/")>  _
    Partial Public Class Dictionary
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private nameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
                Me.RaisePropertyChanged("Name")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://services.aonaware.com/webservices/")>  _
    Partial Public Class DictionaryWord
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dictionaryIdField As String
        
        Private wordField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property DictionaryId() As String
            Get
                Return Me.dictionaryIdField
            End Get
            Set
                Me.dictionaryIdField = value
                Me.RaisePropertyChanged("DictionaryId")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Word() As String
            Get
                Return Me.wordField
            End Get
            Set
                Me.wordField = value
                Me.RaisePropertyChanged("Word")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://services.aonaware.com/webservices/")>  _
    Partial Public Class Strategy
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private idField As String
        
        Private descriptionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
                Me.RaisePropertyChanged("Id")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
                Me.RaisePropertyChanged("Description")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://services.aonaware.com/webservices/")>  _
    Partial Public Class Definition
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private wordField As String
        
        Private dictionaryField As Dictionary
        
        Private wordDefinitionField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Word() As String
            Get
                Return Me.wordField
            End Get
            Set
                Me.wordField = value
                Me.RaisePropertyChanged("Word")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Dictionary() As Dictionary
            Get
                Return Me.dictionaryField
            End Get
            Set
                Me.dictionaryField = value
                Me.RaisePropertyChanged("Dictionary")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property WordDefinition() As String
            Get
                Return Me.wordDefinitionField
            End Get
            Set
                Me.wordDefinitionField = value
                Me.RaisePropertyChanged("WordDefinition")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://services.aonaware.com/webservices/")>  _
    Partial Public Class WordDefinition
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private wordField As String
        
        Private definitionsField() As Definition
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Word() As String
            Get
                Return Me.wordField
            End Get
            Set
                Me.wordField = value
                Me.RaisePropertyChanged("Word")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=1)>  _
        Public Property Definitions() As Definition()
            Get
                Return Me.definitionsField
            End Get
            Set
                Me.definitionsField = value
                Me.RaisePropertyChanged("Definitions")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface DictServiceSoapChannel
        Inherits DictionarySuggestService.DictServiceSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class ServerInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DictionaryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Dictionary()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Dictionary())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DictionaryListExtendedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Dictionary()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Dictionary())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DictionaryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DefineCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As DictionarySuggestService.WordDefinition
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DictionarySuggestService.WordDefinition)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DefineInDictCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As DictionarySuggestService.WordDefinition
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DictionarySuggestService.WordDefinition)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class StrategyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As Strategy()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Strategy())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class MatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As DictionaryWord()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DictionaryWord())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class MatchInDictCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As DictionaryWord()
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DictionaryWord())
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DictServiceSoapClient
        Inherits System.ServiceModel.ClientBase(Of DictionarySuggestService.DictServiceSoap)
        Implements DictionarySuggestService.DictServiceSoap
        
        Private onBeginServerInfoDelegate As BeginOperationDelegate
        
        Private onEndServerInfoDelegate As EndOperationDelegate
        
        Private onServerInfoCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDictionaryListDelegate As BeginOperationDelegate
        
        Private onEndDictionaryListDelegate As EndOperationDelegate
        
        Private onDictionaryListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDictionaryListExtendedDelegate As BeginOperationDelegate
        
        Private onEndDictionaryListExtendedDelegate As EndOperationDelegate
        
        Private onDictionaryListExtendedCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDictionaryInfoDelegate As BeginOperationDelegate
        
        Private onEndDictionaryInfoDelegate As EndOperationDelegate
        
        Private onDictionaryInfoCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDefineDelegate As BeginOperationDelegate
        
        Private onEndDefineDelegate As EndOperationDelegate
        
        Private onDefineCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDefineInDictDelegate As BeginOperationDelegate
        
        Private onEndDefineInDictDelegate As EndOperationDelegate
        
        Private onDefineInDictCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginStrategyListDelegate As BeginOperationDelegate
        
        Private onEndStrategyListDelegate As EndOperationDelegate
        
        Private onStrategyListCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginMatchDelegate As BeginOperationDelegate
        
        Private onEndMatchDelegate As EndOperationDelegate
        
        Private onMatchCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginMatchInDictDelegate As BeginOperationDelegate
        
        Private onEndMatchInDictDelegate As EndOperationDelegate
        
        Private onMatchInDictCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event ServerInfoCompleted As System.EventHandler(Of ServerInfoCompletedEventArgs)
        
        Public Event DictionaryListCompleted As System.EventHandler(Of DictionaryListCompletedEventArgs)
        
        Public Event DictionaryListExtendedCompleted As System.EventHandler(Of DictionaryListExtendedCompletedEventArgs)
        
        Public Event DictionaryInfoCompleted As System.EventHandler(Of DictionaryInfoCompletedEventArgs)
        
        Public Event DefineCompleted As System.EventHandler(Of DefineCompletedEventArgs)
        
        Public Event DefineInDictCompleted As System.EventHandler(Of DefineInDictCompletedEventArgs)
        
        Public Event StrategyListCompleted As System.EventHandler(Of StrategyListCompletedEventArgs)
        
        Public Event MatchCompleted As System.EventHandler(Of MatchCompletedEventArgs)
        
        Public Event MatchInDictCompleted As System.EventHandler(Of MatchInDictCompletedEventArgs)
        
        Public Function ServerInfo() As String Implements DictionarySuggestService.DictServiceSoap.ServerInfo
            Return MyBase.Channel.ServerInfo
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginServerInfo(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginServerInfo
            Return MyBase.Channel.BeginServerInfo(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndServerInfo(ByVal result As System.IAsyncResult) As String Implements DictionarySuggestService.DictServiceSoap.EndServerInfo
            Return MyBase.Channel.EndServerInfo(result)
        End Function
        
        Private Function OnBeginServerInfo(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginServerInfo(callback, asyncState)
        End Function
        
        Private Function OnEndServerInfo(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndServerInfo(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnServerInfoCompleted(ByVal state As Object)
            If (Not (Me.ServerInfoCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent ServerInfoCompleted(Me, New ServerInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub ServerInfoAsync()
            Me.ServerInfoAsync(Nothing)
        End Sub
        
        Public Overloads Sub ServerInfoAsync(ByVal userState As Object)
            If (Me.onBeginServerInfoDelegate Is Nothing) Then
                Me.onBeginServerInfoDelegate = AddressOf Me.OnBeginServerInfo
            End If
            If (Me.onEndServerInfoDelegate Is Nothing) Then
                Me.onEndServerInfoDelegate = AddressOf Me.OnEndServerInfo
            End If
            If (Me.onServerInfoCompletedDelegate Is Nothing) Then
                Me.onServerInfoCompletedDelegate = AddressOf Me.OnServerInfoCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginServerInfoDelegate, Nothing, Me.onEndServerInfoDelegate, Me.onServerInfoCompletedDelegate, userState)
        End Sub
        
        Public Function DictionaryList() As Dictionary() Implements DictionarySuggestService.DictServiceSoap.DictionaryList
            Return MyBase.Channel.DictionaryList
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginDictionaryList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginDictionaryList
            Return MyBase.Channel.BeginDictionaryList(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndDictionaryList(ByVal result As System.IAsyncResult) As Dictionary() Implements DictionarySuggestService.DictServiceSoap.EndDictionaryList
            Return MyBase.Channel.EndDictionaryList(result)
        End Function
        
        Private Function OnBeginDictionaryList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginDictionaryList(callback, asyncState)
        End Function
        
        Private Function OnEndDictionaryList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As Dictionary = Me.EndDictionaryList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDictionaryListCompleted(ByVal state As Object)
            If (Not (Me.DictionaryListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DictionaryListCompleted(Me, New DictionaryListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DictionaryListAsync()
            Me.DictionaryListAsync(Nothing)
        End Sub
        
        Public Overloads Sub DictionaryListAsync(ByVal userState As Object)
            If (Me.onBeginDictionaryListDelegate Is Nothing) Then
                Me.onBeginDictionaryListDelegate = AddressOf Me.OnBeginDictionaryList
            End If
            If (Me.onEndDictionaryListDelegate Is Nothing) Then
                Me.onEndDictionaryListDelegate = AddressOf Me.OnEndDictionaryList
            End If
            If (Me.onDictionaryListCompletedDelegate Is Nothing) Then
                Me.onDictionaryListCompletedDelegate = AddressOf Me.OnDictionaryListCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDictionaryListDelegate, Nothing, Me.onEndDictionaryListDelegate, Me.onDictionaryListCompletedDelegate, userState)
        End Sub
        
        Public Function DictionaryListExtended() As Dictionary() Implements DictionarySuggestService.DictServiceSoap.DictionaryListExtended
            Return MyBase.Channel.DictionaryListExtended
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginDictionaryListExtended(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginDictionaryListExtended
            Return MyBase.Channel.BeginDictionaryListExtended(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndDictionaryListExtended(ByVal result As System.IAsyncResult) As Dictionary() Implements DictionarySuggestService.DictServiceSoap.EndDictionaryListExtended
            Return MyBase.Channel.EndDictionaryListExtended(result)
        End Function
        
        Private Function OnBeginDictionaryListExtended(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginDictionaryListExtended(callback, asyncState)
        End Function
        
        Private Function OnEndDictionaryListExtended(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As Dictionary = Me.EndDictionaryListExtended(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDictionaryListExtendedCompleted(ByVal state As Object)
            If (Not (Me.DictionaryListExtendedCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DictionaryListExtendedCompleted(Me, New DictionaryListExtendedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DictionaryListExtendedAsync()
            Me.DictionaryListExtendedAsync(Nothing)
        End Sub
        
        Public Overloads Sub DictionaryListExtendedAsync(ByVal userState As Object)
            If (Me.onBeginDictionaryListExtendedDelegate Is Nothing) Then
                Me.onBeginDictionaryListExtendedDelegate = AddressOf Me.OnBeginDictionaryListExtended
            End If
            If (Me.onEndDictionaryListExtendedDelegate Is Nothing) Then
                Me.onEndDictionaryListExtendedDelegate = AddressOf Me.OnEndDictionaryListExtended
            End If
            If (Me.onDictionaryListExtendedCompletedDelegate Is Nothing) Then
                Me.onDictionaryListExtendedCompletedDelegate = AddressOf Me.OnDictionaryListExtendedCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDictionaryListExtendedDelegate, Nothing, Me.onEndDictionaryListExtendedDelegate, Me.onDictionaryListExtendedCompletedDelegate, userState)
        End Sub
        
        Public Function DictionaryInfo(ByVal dictId As String) As String Implements DictionarySuggestService.DictServiceSoap.DictionaryInfo
            Return MyBase.Channel.DictionaryInfo(dictId)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginDictionaryInfo(ByVal dictId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginDictionaryInfo
            Return MyBase.Channel.BeginDictionaryInfo(dictId, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndDictionaryInfo(ByVal result As System.IAsyncResult) As String Implements DictionarySuggestService.DictServiceSoap.EndDictionaryInfo
            Return MyBase.Channel.EndDictionaryInfo(result)
        End Function
        
        Private Function OnBeginDictionaryInfo(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim dictId As String = CType(inValues(0),String)
            Return Me.BeginDictionaryInfo(dictId, callback, asyncState)
        End Function
        
        Private Function OnEndDictionaryInfo(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = Me.EndDictionaryInfo(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDictionaryInfoCompleted(ByVal state As Object)
            If (Not (Me.DictionaryInfoCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DictionaryInfoCompleted(Me, New DictionaryInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DictionaryInfoAsync(ByVal dictId As String)
            Me.DictionaryInfoAsync(dictId, Nothing)
        End Sub
        
        Public Overloads Sub DictionaryInfoAsync(ByVal dictId As String, ByVal userState As Object)
            If (Me.onBeginDictionaryInfoDelegate Is Nothing) Then
                Me.onBeginDictionaryInfoDelegate = AddressOf Me.OnBeginDictionaryInfo
            End If
            If (Me.onEndDictionaryInfoDelegate Is Nothing) Then
                Me.onEndDictionaryInfoDelegate = AddressOf Me.OnEndDictionaryInfo
            End If
            If (Me.onDictionaryInfoCompletedDelegate Is Nothing) Then
                Me.onDictionaryInfoCompletedDelegate = AddressOf Me.OnDictionaryInfoCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDictionaryInfoDelegate, New Object() {dictId}, Me.onEndDictionaryInfoDelegate, Me.onDictionaryInfoCompletedDelegate, userState)
        End Sub
        
        Public Function Define(ByVal word As String) As DictionarySuggestService.WordDefinition Implements DictionarySuggestService.DictServiceSoap.Define
            Return MyBase.Channel.Define(word)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginDefine(ByVal word As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginDefine
            Return MyBase.Channel.BeginDefine(word, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndDefine(ByVal result As System.IAsyncResult) As DictionarySuggestService.WordDefinition Implements DictionarySuggestService.DictServiceSoap.EndDefine
            Return MyBase.Channel.EndDefine(result)
        End Function
        
        Private Function OnBeginDefine(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim word As String = CType(inValues(0),String)
            Return Me.BeginDefine(word, callback, asyncState)
        End Function
        
        Private Function OnEndDefine(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As DictionarySuggestService.WordDefinition = Me.EndDefine(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDefineCompleted(ByVal state As Object)
            If (Not (Me.DefineCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DefineCompleted(Me, New DefineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DefineAsync(ByVal word As String)
            Me.DefineAsync(word, Nothing)
        End Sub
        
        Public Overloads Sub DefineAsync(ByVal word As String, ByVal userState As Object)
            If (Me.onBeginDefineDelegate Is Nothing) Then
                Me.onBeginDefineDelegate = AddressOf Me.OnBeginDefine
            End If
            If (Me.onEndDefineDelegate Is Nothing) Then
                Me.onEndDefineDelegate = AddressOf Me.OnEndDefine
            End If
            If (Me.onDefineCompletedDelegate Is Nothing) Then
                Me.onDefineCompletedDelegate = AddressOf Me.OnDefineCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDefineDelegate, New Object() {word}, Me.onEndDefineDelegate, Me.onDefineCompletedDelegate, userState)
        End Sub
        
        Public Function DefineInDict(ByVal dictId As String, ByVal word As String) As DictionarySuggestService.WordDefinition Implements DictionarySuggestService.DictServiceSoap.DefineInDict
            Return MyBase.Channel.DefineInDict(dictId, word)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginDefineInDict(ByVal dictId As String, ByVal word As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginDefineInDict
            Return MyBase.Channel.BeginDefineInDict(dictId, word, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndDefineInDict(ByVal result As System.IAsyncResult) As DictionarySuggestService.WordDefinition Implements DictionarySuggestService.DictServiceSoap.EndDefineInDict
            Return MyBase.Channel.EndDefineInDict(result)
        End Function
        
        Private Function OnBeginDefineInDict(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim dictId As String = CType(inValues(0),String)
            Dim word As String = CType(inValues(1),String)
            Return Me.BeginDefineInDict(dictId, word, callback, asyncState)
        End Function
        
        Private Function OnEndDefineInDict(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As DictionarySuggestService.WordDefinition = Me.EndDefineInDict(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDefineInDictCompleted(ByVal state As Object)
            If (Not (Me.DefineInDictCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DefineInDictCompleted(Me, New DefineInDictCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DefineInDictAsync(ByVal dictId As String, ByVal word As String)
            Me.DefineInDictAsync(dictId, word, Nothing)
        End Sub
        
        Public Overloads Sub DefineInDictAsync(ByVal dictId As String, ByVal word As String, ByVal userState As Object)
            If (Me.onBeginDefineInDictDelegate Is Nothing) Then
                Me.onBeginDefineInDictDelegate = AddressOf Me.OnBeginDefineInDict
            End If
            If (Me.onEndDefineInDictDelegate Is Nothing) Then
                Me.onEndDefineInDictDelegate = AddressOf Me.OnEndDefineInDict
            End If
            If (Me.onDefineInDictCompletedDelegate Is Nothing) Then
                Me.onDefineInDictCompletedDelegate = AddressOf Me.OnDefineInDictCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDefineInDictDelegate, New Object() {dictId, word}, Me.onEndDefineInDictDelegate, Me.onDefineInDictCompletedDelegate, userState)
        End Sub
        
        Public Function StrategyList() As Strategy() Implements DictionarySuggestService.DictServiceSoap.StrategyList
            Return MyBase.Channel.StrategyList
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginStrategyList(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginStrategyList
            Return MyBase.Channel.BeginStrategyList(callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndStrategyList(ByVal result As System.IAsyncResult) As Strategy() Implements DictionarySuggestService.DictServiceSoap.EndStrategyList
            Return MyBase.Channel.EndStrategyList(result)
        End Function
        
        Private Function OnBeginStrategyList(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginStrategyList(callback, asyncState)
        End Function
        
        Private Function OnEndStrategyList(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As Strategy = Me.EndStrategyList(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnStrategyListCompleted(ByVal state As Object)
            If (Not (Me.StrategyListCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent StrategyListCompleted(Me, New StrategyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub StrategyListAsync()
            Me.StrategyListAsync(Nothing)
        End Sub
        
        Public Overloads Sub StrategyListAsync(ByVal userState As Object)
            If (Me.onBeginStrategyListDelegate Is Nothing) Then
                Me.onBeginStrategyListDelegate = AddressOf Me.OnBeginStrategyList
            End If
            If (Me.onEndStrategyListDelegate Is Nothing) Then
                Me.onEndStrategyListDelegate = AddressOf Me.OnEndStrategyList
            End If
            If (Me.onStrategyListCompletedDelegate Is Nothing) Then
                Me.onStrategyListCompletedDelegate = AddressOf Me.OnStrategyListCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginStrategyListDelegate, Nothing, Me.onEndStrategyListDelegate, Me.onStrategyListCompletedDelegate, userState)
        End Sub
        
        Public Function Match(ByVal word As String, ByVal strategy As String) As DictionaryWord() Implements DictionarySuggestService.DictServiceSoap.Match
            Return MyBase.Channel.Match(word, strategy)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginMatch(ByVal word As String, ByVal strategy As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginMatch
            Return MyBase.Channel.BeginMatch(word, strategy, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndMatch(ByVal result As System.IAsyncResult) As DictionaryWord() Implements DictionarySuggestService.DictServiceSoap.EndMatch
            Return MyBase.Channel.EndMatch(result)
        End Function
        
        Private Function OnBeginMatch(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim word As String = CType(inValues(0),String)
            Dim strategy As String = CType(inValues(1),String)
            Return Me.BeginMatch(word, strategy, callback, asyncState)
        End Function
        
        Private Function OnEndMatch(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As DictionaryWord = Me.EndMatch(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnMatchCompleted(ByVal state As Object)
            If (Not (Me.MatchCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent MatchCompleted(Me, New MatchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub MatchAsync(ByVal word As String, ByVal strategy As String)
            Me.MatchAsync(word, strategy, Nothing)
        End Sub
        
        Public Overloads Sub MatchAsync(ByVal word As String, ByVal strategy As String, ByVal userState As Object)
            If (Me.onBeginMatchDelegate Is Nothing) Then
                Me.onBeginMatchDelegate = AddressOf Me.OnBeginMatch
            End If
            If (Me.onEndMatchDelegate Is Nothing) Then
                Me.onEndMatchDelegate = AddressOf Me.OnEndMatch
            End If
            If (Me.onMatchCompletedDelegate Is Nothing) Then
                Me.onMatchCompletedDelegate = AddressOf Me.OnMatchCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginMatchDelegate, New Object() {word, strategy}, Me.onEndMatchDelegate, Me.onMatchCompletedDelegate, userState)
        End Sub
        
        Public Function MatchInDict(ByVal dictId As String, ByVal word As String, ByVal strategy As String) As DictionaryWord() Implements DictionarySuggestService.DictServiceSoap.MatchInDict
            Return MyBase.Channel.MatchInDict(dictId, word, strategy)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginMatchInDict(ByVal dictId As String, ByVal word As String, ByVal strategy As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements DictionarySuggestService.DictServiceSoap.BeginMatchInDict
            Return MyBase.Channel.BeginMatchInDict(dictId, word, strategy, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function EndMatchInDict(ByVal result As System.IAsyncResult) As DictionaryWord() Implements DictionarySuggestService.DictServiceSoap.EndMatchInDict
            Return MyBase.Channel.EndMatchInDict(result)
        End Function
        
        Private Function OnBeginMatchInDict(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim dictId As String = CType(inValues(0),String)
            Dim word As String = CType(inValues(1),String)
            Dim strategy As String = CType(inValues(2),String)
            Return Me.BeginMatchInDict(dictId, word, strategy, callback, asyncState)
        End Function
        
        Private Function OnEndMatchInDict(ByVal result As System.IAsyncResult) As Object()
            Dim retVal() As DictionaryWord = Me.EndMatchInDict(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnMatchInDictCompleted(ByVal state As Object)
            If (Not (Me.MatchInDictCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent MatchInDictCompleted(Me, New MatchInDictCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub MatchInDictAsync(ByVal dictId As String, ByVal word As String, ByVal strategy As String)
            Me.MatchInDictAsync(dictId, word, strategy, Nothing)
        End Sub
        
        Public Overloads Sub MatchInDictAsync(ByVal dictId As String, ByVal word As String, ByVal strategy As String, ByVal userState As Object)
            If (Me.onBeginMatchInDictDelegate Is Nothing) Then
                Me.onBeginMatchInDictDelegate = AddressOf Me.OnBeginMatchInDict
            End If
            If (Me.onEndMatchInDictDelegate Is Nothing) Then
                Me.onEndMatchInDictDelegate = AddressOf Me.OnEndMatchInDict
            End If
            If (Me.onMatchInDictCompletedDelegate Is Nothing) Then
                Me.onMatchInDictCompletedDelegate = AddressOf Me.OnMatchInDictCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginMatchInDictDelegate, New Object() {dictId, word, strategy}, Me.onEndMatchInDictDelegate, Me.onMatchInDictCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
