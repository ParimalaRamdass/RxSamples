'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
'
Namespace BingTranslatorService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://api.microsofttranslator.com/v1/soap.svc", ConfigurationName:="BingTranslatorService.LanguageService")>  _
    Public Interface LanguageService
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/GetLanguages", ReplyAction:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/GetLanguagesRespon"& _ 
            "se")>  _
        Function BeginGetLanguages(ByVal appId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetLanguages(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/GetLanguageNames", ReplyAction:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/GetLanguageNamesRe"& _ 
            "sponse")>  _
        Function BeginGetLanguageNames(ByVal appId As String, ByVal locale As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndGetLanguageNames(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String)
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/Detect", ReplyAction:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/DetectResponse")>  _
        Function BeginDetect(ByVal appId As String, ByVal text As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndDetect(ByVal result As System.IAsyncResult) As String
        
        <System.ServiceModel.OperationContractAttribute(AsyncPattern:=true, Action:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/Translate", ReplyAction:="http://api.microsofttranslator.com/v1/soap.svc/LanguageService/TranslateResponse")>  _
        Function BeginTranslate(ByVal appId As String, ByVal text As String, ByVal from As String, ByVal [to] As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Function EndTranslate(ByVal result As System.IAsyncResult) As String
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface LanguageServiceChannel
        Inherits BingTranslatorService.LanguageService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetLanguagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.ObjectModel.ObservableCollection(Of String)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.ObjectModel.ObservableCollection(Of String))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class GetLanguageNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As System.Collections.ObjectModel.ObservableCollection(Of String)
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Collections.ObjectModel.ObservableCollection(Of String))
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class DetectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class TranslateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Public Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        Public ReadOnly Property Result() As String
            Get
                MyBase.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class LanguageServiceClient
        Inherits System.ServiceModel.ClientBase(Of BingTranslatorService.LanguageService)
        Implements BingTranslatorService.LanguageService
        
        Private onBeginGetLanguagesDelegate As BeginOperationDelegate
        
        Private onEndGetLanguagesDelegate As EndOperationDelegate
        
        Private onGetLanguagesCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginGetLanguageNamesDelegate As BeginOperationDelegate
        
        Private onEndGetLanguageNamesDelegate As EndOperationDelegate
        
        Private onGetLanguageNamesCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginDetectDelegate As BeginOperationDelegate
        
        Private onEndDetectDelegate As EndOperationDelegate
        
        Private onDetectCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginTranslateDelegate As BeginOperationDelegate
        
        Private onEndTranslateDelegate As EndOperationDelegate
        
        Private onTranslateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginOpenDelegate As BeginOperationDelegate
        
        Private onEndOpenDelegate As EndOperationDelegate
        
        Private onOpenCompletedDelegate As System.Threading.SendOrPostCallback
        
        Private onBeginCloseDelegate As BeginOperationDelegate
        
        Private onEndCloseDelegate As EndOperationDelegate
        
        Private onCloseCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Property CookieContainer() As System.Net.CookieContainer
            Get
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    Return httpCookieContainerManager.CookieContainer
                Else
                    Return Nothing
                End If
            End Get
            Set
                Dim httpCookieContainerManager As System.ServiceModel.Channels.IHttpCookieContainerManager = Me.InnerChannel.GetProperty(Of System.ServiceModel.Channels.IHttpCookieContainerManager)
                If (Not (httpCookieContainerManager) Is Nothing) Then
                    httpCookieContainerManager.CookieContainer = value
                Else
                    Throw New System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC"& _ 
                            "ookieContainerBindingElement.")
                End If
            End Set
        End Property
        
        Public Event GetLanguagesCompleted As System.EventHandler(Of GetLanguagesCompletedEventArgs)
        
        Public Event GetLanguageNamesCompleted As System.EventHandler(Of GetLanguageNamesCompletedEventArgs)
        
        Public Event DetectCompleted As System.EventHandler(Of DetectCompletedEventArgs)
        
        Public Event TranslateCompleted As System.EventHandler(Of TranslateCompletedEventArgs)
        
        Public Event OpenCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Event CloseCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_BeginGetLanguages(ByVal appId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginGetLanguages
            Return MyBase.Channel.BeginGetLanguages(appId, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_EndGetLanguages(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements BingTranslatorService.LanguageService.EndGetLanguages
            Return MyBase.Channel.EndGetLanguages(result)
        End Function
        
        Private Function OnBeginGetLanguages(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appId As String = CType(inValues(0),String)
            Return CType(Me,BingTranslatorService.LanguageService).BeginGetLanguages(appId, callback, asyncState)
        End Function
        
        Private Function OnEndGetLanguages(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(Me,BingTranslatorService.LanguageService).EndGetLanguages(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetLanguagesCompleted(ByVal state As Object)
            If (Not (Me.GetLanguagesCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetLanguagesCompleted(Me, New GetLanguagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetLanguagesAsync(ByVal appId As String)
            Me.GetLanguagesAsync(appId, Nothing)
        End Sub
        
        Public Overloads Sub GetLanguagesAsync(ByVal appId As String, ByVal userState As Object)
            If (Me.onBeginGetLanguagesDelegate Is Nothing) Then
                Me.onBeginGetLanguagesDelegate = AddressOf Me.OnBeginGetLanguages
            End If
            If (Me.onEndGetLanguagesDelegate Is Nothing) Then
                Me.onEndGetLanguagesDelegate = AddressOf Me.OnEndGetLanguages
            End If
            If (Me.onGetLanguagesCompletedDelegate Is Nothing) Then
                Me.onGetLanguagesCompletedDelegate = AddressOf Me.OnGetLanguagesCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetLanguagesDelegate, New Object() {appId}, Me.onEndGetLanguagesDelegate, Me.onGetLanguagesCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_BeginGetLanguageNames(ByVal appId As String, ByVal locale As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginGetLanguageNames
            Return MyBase.Channel.BeginGetLanguageNames(appId, locale, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_EndGetLanguageNames(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements BingTranslatorService.LanguageService.EndGetLanguageNames
            Return MyBase.Channel.EndGetLanguageNames(result)
        End Function
        
        Private Function OnBeginGetLanguageNames(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appId As String = CType(inValues(0),String)
            Dim locale As String = CType(inValues(1),String)
            Return CType(Me,BingTranslatorService.LanguageService).BeginGetLanguageNames(appId, locale, callback, asyncState)
        End Function
        
        Private Function OnEndGetLanguageNames(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(Me,BingTranslatorService.LanguageService).EndGetLanguageNames(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnGetLanguageNamesCompleted(ByVal state As Object)
            If (Not (Me.GetLanguageNamesCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent GetLanguageNamesCompleted(Me, New GetLanguageNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub GetLanguageNamesAsync(ByVal appId As String, ByVal locale As String)
            Me.GetLanguageNamesAsync(appId, locale, Nothing)
        End Sub
        
        Public Overloads Sub GetLanguageNamesAsync(ByVal appId As String, ByVal locale As String, ByVal userState As Object)
            If (Me.onBeginGetLanguageNamesDelegate Is Nothing) Then
                Me.onBeginGetLanguageNamesDelegate = AddressOf Me.OnBeginGetLanguageNames
            End If
            If (Me.onEndGetLanguageNamesDelegate Is Nothing) Then
                Me.onEndGetLanguageNamesDelegate = AddressOf Me.OnEndGetLanguageNames
            End If
            If (Me.onGetLanguageNamesCompletedDelegate Is Nothing) Then
                Me.onGetLanguageNamesCompletedDelegate = AddressOf Me.OnGetLanguageNamesCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginGetLanguageNamesDelegate, New Object() {appId, locale}, Me.onEndGetLanguageNamesDelegate, Me.onGetLanguageNamesCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_BeginDetect(ByVal appId As String, ByVal text As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginDetect
            Return MyBase.Channel.BeginDetect(appId, text, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_EndDetect(ByVal result As System.IAsyncResult) As String Implements BingTranslatorService.LanguageService.EndDetect
            Return MyBase.Channel.EndDetect(result)
        End Function
        
        Private Function OnBeginDetect(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appId As String = CType(inValues(0),String)
            Dim text As String = CType(inValues(1),String)
            Return CType(Me,BingTranslatorService.LanguageService).BeginDetect(appId, text, callback, asyncState)
        End Function
        
        Private Function OnEndDetect(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me,BingTranslatorService.LanguageService).EndDetect(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnDetectCompleted(ByVal state As Object)
            If (Not (Me.DetectCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent DetectCompleted(Me, New DetectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub DetectAsync(ByVal appId As String, ByVal text As String)
            Me.DetectAsync(appId, text, Nothing)
        End Sub
        
        Public Overloads Sub DetectAsync(ByVal appId As String, ByVal text As String, ByVal userState As Object)
            If (Me.onBeginDetectDelegate Is Nothing) Then
                Me.onBeginDetectDelegate = AddressOf Me.OnBeginDetect
            End If
            If (Me.onEndDetectDelegate Is Nothing) Then
                Me.onEndDetectDelegate = AddressOf Me.OnEndDetect
            End If
            If (Me.onDetectCompletedDelegate Is Nothing) Then
                Me.onDetectCompletedDelegate = AddressOf Me.OnDetectCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginDetectDelegate, New Object() {appId, text}, Me.onEndDetectDelegate, Me.onDetectCompletedDelegate, userState)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_BeginTranslate(ByVal appId As String, ByVal text As String, ByVal from As String, ByVal [to] As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginTranslate
            Return MyBase.Channel.BeginTranslate(appId, text, from, [to], callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function BingTranslatorService_LanguageService_EndTranslate(ByVal result As System.IAsyncResult) As String Implements BingTranslatorService.LanguageService.EndTranslate
            Return MyBase.Channel.EndTranslate(result)
        End Function
        
        Private Function OnBeginTranslate(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim appId As String = CType(inValues(0),String)
            Dim text As String = CType(inValues(1),String)
            Dim from As String = CType(inValues(2),String)
            Dim [to] As String = CType(inValues(3),String)
            Return CType(Me,BingTranslatorService.LanguageService).BeginTranslate(appId, text, from, [to], callback, asyncState)
        End Function
        
        Friend Function OnEndTranslate(ByVal result As System.IAsyncResult) As Object()
            Dim retVal As String = CType(Me, BingTranslatorService.LanguageService).EndTranslate(result)
            Return New Object() {retVal}
        End Function
        
        Private Sub OnTranslateCompleted(ByVal state As Object)
            If (Not (Me.TranslateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent TranslateCompleted(Me, New TranslateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub TranslateAsync(ByVal appId As String, ByVal text As String, ByVal from As String, ByVal [to] As String)
            Me.TranslateAsync(appId, text, from, [to], Nothing)
        End Sub
        
        Public Overloads Sub TranslateAsync(ByVal appId As String, ByVal text As String, ByVal from As String, ByVal [to] As String, ByVal userState As Object)
            If (Me.onBeginTranslateDelegate Is Nothing) Then
                Me.onBeginTranslateDelegate = AddressOf Me.OnBeginTranslate
            End If
            If (Me.onEndTranslateDelegate Is Nothing) Then
                Me.onEndTranslateDelegate = AddressOf Me.OnEndTranslate
            End If
            If (Me.onTranslateCompletedDelegate Is Nothing) Then
                Me.onTranslateCompletedDelegate = AddressOf Me.OnTranslateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginTranslateDelegate, New Object() {appId, text, from, [to]}, Me.onEndTranslateDelegate, Me.onTranslateCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginOpen(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(callback, asyncState)
        End Function
        
        Private Function OnEndOpen(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndOpen(result)
            Return Nothing
        End Function
        
        Private Sub OnOpenCompleted(ByVal state As Object)
            If (Not (Me.OpenCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent OpenCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub OpenAsync()
            Me.OpenAsync(Nothing)
        End Sub
        
        Public Overloads Sub OpenAsync(ByVal userState As Object)
            If (Me.onBeginOpenDelegate Is Nothing) Then
                Me.onBeginOpenDelegate = AddressOf Me.OnBeginOpen
            End If
            If (Me.onEndOpenDelegate Is Nothing) Then
                Me.onEndOpenDelegate = AddressOf Me.OnEndOpen
            End If
            If (Me.onOpenCompletedDelegate Is Nothing) Then
                Me.onOpenCompletedDelegate = AddressOf Me.OnOpenCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginOpenDelegate, Nothing, Me.onEndOpenDelegate, Me.onOpenCompletedDelegate, userState)
        End Sub
        
        Private Function OnBeginClose(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(callback, asyncState)
        End Function
        
        Private Function OnEndClose(ByVal result As System.IAsyncResult) As Object()
            CType(Me,System.ServiceModel.ICommunicationObject).EndClose(result)
            Return Nothing
        End Function
        
        Private Sub OnCloseCompleted(ByVal state As Object)
            If (Not (Me.CloseCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent CloseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.[Error], e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub CloseAsync()
            Me.CloseAsync(Nothing)
        End Sub
        
        Public Overloads Sub CloseAsync(ByVal userState As Object)
            If (Me.onBeginCloseDelegate Is Nothing) Then
                Me.onBeginCloseDelegate = AddressOf Me.OnBeginClose
            End If
            If (Me.onEndCloseDelegate Is Nothing) Then
                Me.onEndCloseDelegate = AddressOf Me.OnEndClose
            End If
            If (Me.onCloseCompletedDelegate Is Nothing) Then
                Me.onCloseCompletedDelegate = AddressOf Me.OnCloseCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginCloseDelegate, Nothing, Me.onEndCloseDelegate, Me.onCloseCompletedDelegate, userState)
        End Sub
        
        Protected Overrides Function CreateChannel() As BingTranslatorService.LanguageService
            Return New LanguageServiceClientChannel(Me)
        End Function
        
        Private Class LanguageServiceClientChannel
            Inherits ChannelBase(Of BingTranslatorService.LanguageService)
            Implements BingTranslatorService.LanguageService
            
            Public Sub New(ByVal client As System.ServiceModel.ClientBase(Of BingTranslatorService.LanguageService))
                MyBase.New(client)
            End Sub
            
            Public Function BeginGetLanguages(ByVal appId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginGetLanguages
                Dim _args((1) - 1) As Object
                _args(0) = appId
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetLanguages", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetLanguages(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements BingTranslatorService.LanguageService.EndGetLanguages
                Dim _args((0) - 1) As Object
                Dim _result As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(MyBase.EndInvoke("GetLanguages", _args, result),System.Collections.ObjectModel.ObservableCollection(Of String))
                Return _result
            End Function
            
            Public Function BeginGetLanguageNames(ByVal appId As String, ByVal locale As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginGetLanguageNames
                Dim _args((2) - 1) As Object
                _args(0) = appId
                _args(1) = locale
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("GetLanguageNames", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndGetLanguageNames(ByVal result As System.IAsyncResult) As System.Collections.ObjectModel.ObservableCollection(Of String) Implements BingTranslatorService.LanguageService.EndGetLanguageNames
                Dim _args((0) - 1) As Object
                Dim _result As System.Collections.ObjectModel.ObservableCollection(Of String) = CType(MyBase.EndInvoke("GetLanguageNames", _args, result),System.Collections.ObjectModel.ObservableCollection(Of String))
                Return _result
            End Function
            
            Public Function BeginDetect(ByVal appId As String, ByVal text As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginDetect
                Dim _args((2) - 1) As Object
                _args(0) = appId
                _args(1) = text
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Detect", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndDetect(ByVal result As System.IAsyncResult) As String Implements BingTranslatorService.LanguageService.EndDetect
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("Detect", _args, result),String)
                Return _result
            End Function
            
            Public Function BeginTranslate(ByVal appId As String, ByVal text As String, ByVal from As String, ByVal [to] As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements BingTranslatorService.LanguageService.BeginTranslate
                Dim _args((4) - 1) As Object
                _args(0) = appId
                _args(1) = text
                _args(2) = from
                _args(3) = [to]
                Dim _result As System.IAsyncResult = MyBase.BeginInvoke("Translate", _args, callback, asyncState)
                Return _result
            End Function
            
            Public Function EndTranslate(ByVal result As System.IAsyncResult) As String Implements BingTranslatorService.LanguageService.EndTranslate
                Dim _args((0) - 1) As Object
                Dim _result As String = CType(MyBase.EndInvoke("Translate", _args, result),String)
                Return _result
            End Function
        End Class
    End Class
End Namespace
